.TH KR_SEARCH 3 "11 Jul 2016"

.SH NAME
kr_search \- Search information of krisp database about given ip address.

.SH SYNOPSIS
.BI "#include <krisp.h>"
.br
.BI "typedef struct " netinfos " {"
.br
.BI "    char            " err[1024] "; // get error messages"
.br
.BI "    char            " ip[256] ";   // given address"
.br
.BI "    char            " icode[64] "; // ISP code"
.br
.BI "    char            " iname[64] "; // ISP full name"
.br
.BI "    char            " ccode[4] ";  // NATION code"
.br
.BI "    char            " cname[64] "; // NATION full name"
.br
.BI "    ulong           " netmask ";   // network mask of range"
.br
.BI "    ulong           " start ";     // start of range"
.br
.BI "    ulong           " end ";       // end of range"
.br
.BI "    bool            " verbose ";   // verbose option"
.br
.BI "} " KRNET_API ";"
.br
.BI "int kr_search (KRNET_API *" isp ", KR_API *" db ");"

.SH DESCRIPTION
.BI kr_search
api searches information about given ip or domain name. Basically
.BI kr_search
API searches on krisp table of database.
.PP
If you want to other table name, you can use
.BI kr_search_ex
api. see also `man 3 kr_search_ex`.

.PP
Before call the
.BI kr_search
api, ip member of
.BI KRNET_API
struct is must initialized.
.PP
.BI "strcpy (" isp.ip ", " ipaddress ");"
.br
.BI "kr_search (&" isp ", " db ");"


.SH "RETURN VALUE"
.PP
On success, return 
.BI 0 
and otherwise return 
.BI 1. 
No search result is regared as success. Only DB error 
is regarded as failure.

.SH EXAMPLE
.nf
#include <krisp.h>

int main (void) {
    KR_API * db;
    KRNET_API isp;
    char * addr = "kns.kornet.net";
    char * database = NULL;
    char err[1024];

    if ( kr_open (&db, database, err) == false ) {
        fprintf (stderr, "ERROR Connect: %s\\n", err);
        return 1;
    }

    isp.verbose = false;
    // defined safecpy_256 in krispapi.h
    safecpy_256 (isp.ip, addr);
    if ( kr_search (&isp, db) ) {
        printf ("ERROR: %s\\n", isp.err);
        kr_close (&db);
        return 1;
    }

    kr_close (&db);

    /*
     * long2ip is returned in a statically allocated buffer, which
     * subsequent calls will overwrite.
     */
    printf ("%-15s %-15s %-20s", ip, isp.ip, isp.icode);
    printf ("%-15s ", long2ip (isp.start));
    printf ("%-15s %s", long2ip (isp.end), isp.iname);

    return 0;
}
.fi

.SH AUTHORS
JoungKyun.Kim <http://joungkyun.github.com>

.SH BUGS
Report to https://github.com/Joungkyun/libkrisp/issues

.SH COPYRIGHT
Copyright (c) 2016 JoungKyun.Kim <http://oops.org>

This api is follows
.BI LGPL 2.1

.SH "SEE ALSO"
kr_open(3), kr_close(3), kr_search_ex(3), long2ip(3)
