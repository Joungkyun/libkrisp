dnl Copyright (C) 2013 JoungKyun.Kim <http://oops.org>
dnl
dnl This file is part of libkrisp
dnl
dnl This program is free software: you can redistribute it and/or modify
dnl it under the terms of the GNU Lesser General Public License as published
dnl by the Free Software Foundation, either version 3 of the License, or
dnl (at your option) any later version.
dnl
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl
dnl You should have received a copy of the GNU Lesser General Public License
dnl along with this program.  If not, see <http://www.gnu.org/licenses/>.
dnl
dnl $Id$

AC_DEFUN([AX_KRISP@COMPAT_VERSION@_WITH],
[
	if test "x$with_krisp@COMPAT_VERSION@" != "x"; then
		if test "x$with_krisp@COMPAT_VERSION@" = "xyes"; then
			krisp@COMPAT_VERSION@config="@static_bindir@/krisp@COMPAT_VERSION@-config"
		else
			krisp@COMPAT_VERSION@config="$with_krisp@COMPAT_VERSION@"
		fi
	else
		krisp@COMPAT_VERSION@config="@static_bindir@/krisp@COMPAT_VERSION@-config"
	fi

	AC_MSG_CHECKING(for krisp@COMPAT_VERSION@-config path)
	if test ! -f "$krisp@COMPAT_VERSION@config" || test ! -x "$krisp@COMPAT_VERSION@config"; then
		if test $krisp@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR(can't find $krisp@COMPAT_VERSION@config)
		else
			krisp@COMPAT_VERSION@config=
			AC_MSG_RESULT([not found])
		fi
	else
		AC_MSG_RESULT([$krisp@COMPAT_VERSION@config])
	fi
])

AC_DEFUN([AX_KRISP@COMPAT_VERSION@_HEADER],
[
	#
	# krisp@COMPAT_VERSION@ header check
	#
	KRISP@COMPAT_VERSION@_INCLUDES="`$krisp@COMPAT_VERSION@config --includes 2> /dev/null`"
	if test -z "$KRISP@COMPAT_VERSION@_INCLUDES"; then
		KRISP@COMPAT_VERSION@_INCLUDES="`$krisp@COMPAT_VERSION@config --defs 2> /dev/null | sed 's/[[ ]]*-D[[^ ]]*//g'`"
	fi

	ret_cppflags=0
	for check_cppflags in $CPPFLAGS
	do
		test -z "$KRISP@COMPAT_VERSION@_INCLUDES" && break

		if test "$check_cppflags" = "$KRISP@COMPAT_VERSION@_INCLUDES"; then
			ret_cppflags=1
			break
		fi
	done
	test $ret_cppflags -eq 0 && CPPFLAGS="$KRISP@COMPAT_VERSION@_INCLUDES $CPPFLAGS"
	AC_CHECK_HEADERS(krisp.h)
	if test "$ac_cv_header_krisp_h" != "yes"; then
		AC_MSG_ERROR([You must need krisp.h header file])
	fi
])

AC_DEFUN([AX_KRISP@COMPAT_VERSION@_LD],
[
	#
	# krisp@COMPAT_VERSION@ library check
	#
	KRISP@COMPAT_VERSION@_LDFLAGS="`$krisp@COMPAT_VERSION@config --ldflags 2> /dev/null`"

	#
	# for compatibility
	#
	if test -z "$KRISP@COMPAT_VERSION@_LDFLAGS"; then
		KRISP@COMPAT_VERSION@_LDFLAGS="`$krisp@COMPAT_VERSION@config --libs 2> /dev/null | sed 's/[[[:space:]]]*-l.*//g'`"
	fi

	krisp@COMPAT_VERSION@_OLD_LDFLAGS="$LDFLAGS"
	LDFLAGS="$KRISP@COMPAT_VERSION@_LDFLAGS"
	AC_CHECK_LIB(
		krisp@COMPAT_VERSION@, ip2long, [
			AC_DEFINE(
				[HAVE_LIBKRISP@COMPAT_VERSION@], 1,
				[Define to 1 if you have the `krisp@COMPAT_VERSION@' library (-lkrisp@COMPAT_VERSION@).])
			LIBS="`$krisp@COMPAT_VERSION@config --libs 2> /dev/null` $LIBS"
		],[
			if test $krisp@COMPAT_VERSION@_check_failed -eq 1; then
				AC_MSG_ERROR([Can't not found `krisp@COMPAT_VERSION@' library (-lkrisp@COMPAT_VERSION@)])
			fi
		]
	)
	LDFLAGS="$krisp@COMPAT_VERSION@_OLD_LDFLAGS"

	ret_ldflags=0
	for check_ldflags in $LDFLAGS
	do
		test -z "$KRISP@COMPAT_VERSION@_LDFLAGS" && break

		if test "$check_ldflags" = "$KRISP@COMPAT_VERSION@_LDFLAGS"; then
			ret_ldflags=1
			break
		fi
	done

	test $ret_ldflags -eq 0 && LDFLAGS="$KRISP@COMPAT_VERSION@_LDFLAGS $LDFLAGS"
])

AC_DEFUN([AX_KRISP@COMPAT_VERSION@_LIBTOOL],
[
	#
	# krisp@COMPAT_VERSION@ library check
	#
	AC_MSG_CHECKING(for ip2long in -lkrisp@COMPAT_VERSION@)

	KRISP@COMPAT_VERSION@_LIBS="`$krisp@COMPAT_VERSION@config --link-libtool 2> /dev/null`"
	if test -z "$KRISP@COMPAT_VERSION@_LIBS"; then
		KRISP@COMPAT_VERSION@_LIBS="`$krisp@COMPAT_VERSION@config --libs 2> /dev/null`"
	fi

	if test "x$KRISP@COMPAT_VERSION@_LIBS" = "x"; then
		AC_MSG_RESULT([no])
		if test $krisp@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR([Can't not found krisp@COMPAT_VERSION@ libtool library (libkrisp@COMPAT_VERSION@.la)])
		fi
	else
		AC_MSG_RESULT([yes])
		LIBS="$KRISP@COMPAT_VERSION@_LIBS $LIBS"
		AC_DEFINE(
			[HAVE_LIBKRISP@COMPAT_VERSION@], 1,
			[Define to 1 if you have the `krisp@COMPAT_VERSION@' library (-lkrisp@COMPAT_VERSION@).])
	fi
])

dnl
dnl Usage AX_KRISP@COMPAT_VERSION@
dnl     AX_KRISP@COMPAT_VERSION@([library type],[stop on failed])
dnl         library type : ld or libtool
dnl         stop on failed : 1 => stop, 0 => continue
dnl
dnl     AX_KRISP@COMPAT_VERSION@([library type])
dnl     AX_KRISP@COMPAT_VERSION@(1)
dnl
dnl     no argument on AX_KRISP@COMPAT_VERSION@
dnl         library type   = ld
dnl         stop on failed = 0
dnl
AC_DEFUN([AX_KRISP@COMPAT_VERSION@],
[
	ax_krisp@COMPAT_VERSION@_argc=$#
	krisp@COMPAT_VERSION@_check_failed=0

	if test $ax_krisp@COMPAT_VERSION@_argc -gt 0; then
		ax_krisp@COMPAT_VERSION@_first_arg=$1
		ax_krisp@COMPAT_VERSION@_second_arg=$2
	fi

	if test $ax_krisp@COMPAT_VERSION@_argc -gt 0; then
		if test $ax_krisp@COMPAT_VERSION@_argc -eq 2; then
			if test "$ax_krisp@COMPAT_VERSION@_first_arg" = "libtool"; then
				krisp@COMPAT_VERSION@_ld_mode="libtool"
			elif test "$ax_krisp@COMPAT_VERSION@_first_arg" = "ld"; then
				krisp@COMPAT_VERSION@_ld_mode="ld"
			else
				AC_MSG_ERROR([Unsupported link type on AX KRISP@COMPAT_VERSION@ macro])
			fi

			if test $ax_krisp@COMPAT_VERSION@_second_arg -eq 1; then
				krisp@COMPAT_VERSION@_check_failed=1
			fi
		elif test $ax_krisp@COMPAT_VERSION@_argc -eq 1; then
			if test "$ax_krisp@COMPAT_VERSION@_first_arg" = "libtool"; then
				krisp@COMPAT_VERSION@_ld_mode="libtool"
			elif test "$ax_krisp@COMPAT_VERSION@_first_arg" = "ld"; then
				krisp@COMPAT_VERSION@_ld_mode="ld"
			elif test $ax_krisp@COMPAT_VERSION@_first_arg -eq 1 || test $ax_krisp@COMPAT_VERSION@_first_arg -eq 0 ; then
				krisp@COMPAT_VERSION@_check_failed=$ax_krisp@COMPAT_VERSION@_first_arg
			else
				AC_MSG_ERROR([Unsupported argument value on AX KRISP@COMPAT_VERSION@ macro])
			fi
		else
			AC_MSG_ERROR([So many arguments on AX KRISP@COMPAT_VERSION@ macro])
		fi
	fi

	AC_ARG_WITH(krisp@COMPAT_VERSION@,
		[  --with-krisp@COMPAT_VERSION@=PATH       path of krisp@COMPAT_VERSION@-config [[default: @static_bindir@/krisp@COMPAT_VERSION@-config]]])

	if test "x$with_krisp@COMPAT_VERSION@" != "xno"; then
		AX_KRISP@COMPAT_VERSION@_WITH

		if test "$krisp@COMPAT_VERSION@_ld_mode" = "libtool"; then
			AX_KRISP@COMPAT_VERSION@_LIBTOOL
		else
			AX_KRISP@COMPAT_VERSION@_LD
		fi
		AX_KRISP@COMPAT_VERSION@_HEADER
	else
		if test $krisp@COMPAT_VERSION@_check_failed -eq 1; then
			AC_MSG_ERROR([--without-krisp@COMPAT_VERSION@ doesn't permit])
		fi
	fi
])
